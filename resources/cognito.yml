Resources:
  ExampleUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
        InviteMessageTemplate:
          EmailMessage: "Your username is {username} and temporary password is {####}."
          EmailSubject: "Your temporary password"
          SMSMessage: "Your username is {username} and temporary password is {####}."
      AliasAttributes:
        - email
        - preferred_username
      AutoVerifiedAttributes:
        - email
      DeviceConfiguration:
        ChallengeRequiredOnNewDevice: false
        DeviceOnlyRememberedOnUserPrompt: false
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      EmailVerificationMessage: "Your verification code is {####}."
      EmailVerificationSubject: "Your verification code"
      MfaConfiguration: OFF
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
          TemporaryPasswordValidityDays: 365
      Schema:
        - AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Name: email
          Required: true
      SmsAuthenticationMessage: "Your verification code is {####}."
      SmsVerificationMessage: "Your verification code is {####}."
      UsernameConfiguration:
        CaseSensitive: true
      UserPoolAddOns:
        AdvancedSecurityMode: AUDIT
      UserPoolName: ${self:service}-${self:provider.stage}-user-pool
      UserPoolTags:
        Service: ${self:service}-${self:provider.stage}
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
        EmailMessage: "Your verification code is {####}."
        EmailSubject: "Your verification code"
        SmsMessage: "Your verification code is {####}."

  ExampleUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      CallbackURLs:
        - "http://localhost:3000"
      ClientName: ${self:service}-${self:provider.stage}-user-pool-client
      DefaultRedirectURI: "http://localhost:3000"
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      LogoutURLs:
        - "http://localhost:3000"
      PreventUserExistenceErrors: ENABLED
      ReadAttributes:
        - email
        - preferred_username
      RefreshTokenValidity: 10
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId:
        Ref: ExampleUserPool
      WriteAttributes:
        - email
        - preferred_username

  ExampleUserPoolGroupCustomer:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: "一般ユーザー（ToDo閲覧のみ可能）"
      GroupName: Customer
      Precedence: 1
      UserPoolId: !Ref ExampleUserPool

  ExampleUserPoolGroupAdmin:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: "管理者（ToDo閲覧及び作成が可能）"
      GroupName: Admin
      Precedence: 0
      UserPoolId: !Ref ExampleUserPool
